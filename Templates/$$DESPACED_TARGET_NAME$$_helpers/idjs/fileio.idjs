(function() {

if (! $$SHORTCODE$$.fileio) {
    $$SHORTCODE$$.fileio = {};
}

var ES_SCRIPT_readUTF8TextFile = 
    "(function(filePath) {" +
        "var result = '';" +
        "function dQ(s){\nreturn'\"'+s.replace(/\\\\/g,\"\\\\\\\\\").replace(/\"/g,'\\\\\"').replace(/\\n/g,\"\\\\n\").replace(/\\r/g,\"\\\\r\")+'\"';\n}" +
        "try {" +
            "var textFile = File(filePath);" +
            "textFile.open('r');" +
            "textFile.encoding = 'UTF8';" +
            "result = textFile.read();" +
            "textFile.close();" +
        "}" +
        "catch (err) {" +
        "}" +
        "return dQ(result)";
    "})";

var ES_SCRIPT_outputToUTF8TextFile = 
    "(function(filePath, line, mode_a_or_w, mustAddNewline) {" +
        "try {" +
            "var textFile = File(filePath);" +
            "textFile.open(mode_a_or_w);" +
            "textFile.encoding = 'UTF8';" +
            "if (mustAddNewline){" +
                "textFile.writeln(line);" +
            "}" +
            "else{" +
                "textFile.write(line);" +
            "}" +
            "textFile.close();" +
        "}" +
        "catch (err) {" +
        "}" +
    "})";

// No logging in these functions - they are themselves used by the logging functions

$$SHORTCODE$$.fileio.appendUTF8TextFile = async function appendUTF8TextFile(filePath, text, handleNewLine) {

    try {
        var extendScript = 
            ES_SCRIPT_outputToUTF8TextFile + "(" +
                $$SHORTCODE$$.dQ(filePath) + "," +
                $$SHORTCODE$$.dQ(text) + "," +
                $$SHORTCODE$$.dQ("a") + "," +
                (handleNewLine == $$SHORTCODE$$.fileio.FILEIO_APPEND_NEWLINE ? "true" : "false") +
            ")";
        await $$SHORTCODE$$.G.app.doScript(extendScript, ScriptLanguage.JAVASCRIPT);
    }
    catch (err) {       
    }
}

$$SHORTCODE$$.fileio.readUTF8TextFile = async function readUTF8TextFile(filePath) {

    var retVal;

    try {
        var extendScript = 
            ES_SCRIPT_readUTF8TextFile + "(" +
                $$SHORTCODE$$.dQ(filePath) + 
            ")";
        retVal = await eval($$SHORTCODE$$.G.app.doScript(extendScript, ScriptLanguage.JAVASCRIPT));
    }
    catch (err) {        
    }

    return retVal;
}

$$SHORTCODE$$.fileio.writeUTF8TextFile = async function writeUTF8TextFile(filePath, text, handleNewLine) {

    try {
        var extendScript = 
            ES_SCRIPT_outputToUTF8TextFile + "(" +
                $$SHORTCODE$$.dQ(filePath) + "," +
                $$SHORTCODE$$.dQ(text) + "," +
                $$SHORTCODE$$.dQ("w") + "," +
                (handleNewLine == $$SHORTCODE$$.fileio.FILEIO_APPEND_NEWLINE ? "true" : "false") +
            ")";
        await $$SHORTCODE$$.G.app.doScript(extendScript, ScriptLanguage.JAVASCRIPT);
    }
    catch (err) {        
    }
}

})();
